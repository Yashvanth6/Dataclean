library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(tidyr)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
covid19_uk %>% group_by(Hospital) %>% plot_time_series( Date,  Admission,  .interactive = F, .legend_show = F, .facet_ncol = 3, .title="Time Series (hospital level)")
autoplot(res)+
ggtitle("")
ylab("")
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(tidyr)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
autoplot(res)+
ggtitle("")
ylab("")
```
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(tidyr)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
autoplot(res)+
ggtitle("")
ylab("")
```
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(tidyr)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
```
Describe plot.
```{r SeasonalPlot, fig.cap="weekly cases"}
hospital_adm<-covid19_tsb %>% select(hospital_admission)
hospital_adm %>% gg_season(period = "week") + geom_point() +ggthemes::theme_clean()
```
```{r Autocorrelation}
hospital_adm %>% ACF(lag_max = 28) %>% autoplot()+ggthemes::theme_clean()
```
Describe plot.
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d/%m/%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% anyNA()
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
```
describe data
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
```
Describe plot.
```{r SeasonalPlot, fig.cap="weekly cases"}
hospital_adm<-covid19_tsb %>% select(hospital_admission)
hospital_adm %>% gg_season(period = "week") + geom_point() +ggthemes::theme_clean()
```
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(tidyr)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d-%m-%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% drop_na("hospital_admission")
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
#print(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')]
covid19_uk = subset(covid19_uk, select = -c(date))
print(covid19_uk)
round(res, 2))
res <- cor(covid19_uk[, c('hospital_admission', 'alltest_performed', 'hospital_cases', 'all_positive_case', 'NHS111_call', 'stringency_index', 'stay_home_requirements', 'facial_coverings', 'apple_driving', 'apple_transit', 'apple_walking', 'vaccine_dose1', 'vaccine_dose2', 'vaccine_dose3')],use = "complete.obs")
round(res, 2)
```
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
```
Describe plot.
```{r SeasonalPlot, fig.cap="weekly cases"}
hospital_adm<-covid19_tsb %>% select(hospital_admission)
hospital_adm %>% gg_season(period = "week") + geom_point() +ggthemes::theme_clean()
```
```{r Autocorrelation}
hospital_adm %>% ACF(lag_max = 28) %>% autoplot()+ggthemes::theme_clean()
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d/%m/%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% anyNA()
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
```
describe data
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(GGally)
```
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d/%m/%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% anyNA()
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
```
describe data
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
```
A time-series plot is a commonly used graphical tool useful for examining the underlying long-term pattern of a time series. Time (days, months, years, etc.) is plotted on the horizontal axis, and the series of interest is plotted on the vertical axis. Here in this time series visualization
For the time series, I utilized date and hospital admission.
```{r SeasonalPlot, fig.cap="weekly cases"}
hospital_adm<-covid19_tsb %>% select(hospital_admission)
hospital_adm %>% gg_season(period = "week") + geom_point() +ggthemes::theme_clean()
```
```{r Autocorrelation}
hospital_adm %>% ACF(lag_max = 28) %>% autoplot()+ggthemes::theme_clean()
---
title: 'Forecasting covid-19 hospital admission in UK'
author:
- "Studend Number:21114834   Module Number: BST832"
- "Lecturer Name: Dr Bahman Rostami-Tabar "
date: "07 May 2022"
output:
pdf_document:
latex_engine: xelatex
toc: yes
bibliography: mybib.bib
csl: harvard-cardiff-university.csl
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,eval = TRUE, warning = FALSE, message = FALSE,
out.width = "70%", fig.align = 'center', fig.pos = 'H')
library(fpp3)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(kableExtra)
library(gridExtra)
library(janitor)
library(GGally)
```{r data-introduce, include=FALSE}
covid19_uk <- read_csv(file = "data/covid19_uk.csv")
#col_types = cols(ID = col_date(format = "%d/%m/%Y")))
covid19_uk$date <- as_date(covid19_uk$date,format="%d/%m/%Y")
```
describe dataset.
#   Part A- key feature
## Dataset Covid19 UK:
## Check data quality:
```{r quality-check, include=FALSE}
covid19_uk %>% anyNA()
covid19_uk %>% duplicated() %>% sum()
covid19_tsb<-as_tsibble(covid19_uk, index= date)
```
describe data
## Prelimary analysis:
### Hospital timeseries visualisation
```{r data-vis, options}
covid19_tsb %>% ggplot(mapping=aes(x= date, y=hospital_admission))+ geom_point()+geom_line()+ ggthemes::theme_clean()
```
A time-series plot is a commonly used graphical tool useful for examining the underlying long-term pattern of a time series. Time (days, months, years, etc.) is plotted on the horizontal axis, and the series of interest is plotted on the vertical axis. Here in this time series visualization
For the time series, I utilized date and hospital admission.
```{r SeasonalPlot, fig.cap="weekly cases"}
hospital_adm<-covid19_tsb %>% select(hospital_admission)
hospital_adm %>% gg_season(period = "week") + geom_point() +ggthemes::theme_clean()
```
```{r Autocorrelation}
hospital_adm %>% ACF(lag_max = 28) %>% autoplot()+ggthemes::theme_clean()
